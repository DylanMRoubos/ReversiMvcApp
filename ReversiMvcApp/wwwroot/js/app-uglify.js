"use strict";function _defineProperty(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}var Game=function(){var a,n;return{init:function(e,t){a=e,n=t,Game.Model.updateGame(a,n),window.setInterval(function(){console.log("refresh"),Game.Model.updateGame(a,n)},2e3)}}}(),FeedbackWidget={hide:function(){$("#feedback-widget").removeClass("fade-in"),$("#feedback-widget").addClass("fade-out")},show:function(e,t){$(".alert-text").text(e),$("#feedback-widget").removeClass("fade-out"),$("#feedback-widget").addClass("fade-in"),t?$(".FeedbackButton").css("display","none"):$(".FeedbackButton").css("display","inline")}};Game.Api={showMeme:function(){Game.Data.apicall("https://meme-api.herokuapp.com/gimme").then(function(e){$("#meme").html(Game.Template.parseTemplate("meme",{src:e.url}))})}},Game.Data=function(){function r(e,n){return new Promise(function(t,a){$.ajax({url:e,type:"PUT",headers:{"Content-Type":"application/json"},data:JSON.stringify(n),success:function(e){t(e)},error:function(e){a(e)}})})}function e(e){$("#descriptions").html(e.description),$("#player1token").html("Wit: "+e.playerToken1),$("#player2token").html("Zwart: "+e.playerToken2),1==e.currentPlayer?($("#player1token").css("font-weight","bold"),$("#player2token").css("font-weight","normal")):($("#player2token").css("font-weight","bold"),$("#player1token").css("font-weight","normal"))}var t={printboard:function(e){e={board:JSON.parse(e)};$("#boardarea").html(Game.Template.parseTemplate("board",e))},printDetails:e};return _defineProperty(t,"printDetails",e),_defineProperty(t,"showFiche",function(t){var a,n,o=0;$("#board").find("div").each(function(){var e;t==this&&(a=(e=o/2)%8,n=~~(e/8)),o++});var e={x:a,y:n,playerToken:Game.Model.getPlayerToken(),gameToken:Game.Model.getGame().token,pass:!1};r("https://localhost:5001/api/Spel/Zet",e).then(function(e){Game.Api.showMeme()}).catch(function(e){console.log("Erro in getting the data")}),console.log(r)}),_defineProperty(t,"apicall",function(e){return new Promise(function(t,a){$.ajax({url:e,data:{},type:"GET",success:function(e){t(e)},error:function(e){a(e)}})})}),_defineProperty(t,"skip",function(){var e={gameToken:Game.Model.getGame().token,playerToken:Game.Model.getPlayerToken()};r("https://localhost:5001/api/Spel/Skip",e)}),t}(),Game.Model=function(){var a,n,o=function(e){if(1==e.finished)return FeedbackWidget.show("The game has ended and "+e.winner+" has won",!0),void $("#board").css("opacity","0.5");(1==e.currentPlayer?e.playerToken1:e.playerToken2)!=n&&$("#board").css("opacity","0.5")},r=function(e){return new Promise(function(t,a){Game.Data.apicall("https://localhost:5001/api/spel/"+e).then(function(e){null!=e&&t(e),a()}).catch(function(e){console.log("Error in getting the data")})})};return{getGame:function(){return a},getPlayerToken:function(){return n},updateGame:function(e,t){r(e).then(function(e){a=e,n=t,Game.Data.printboard(a.board),Game.Data.printDetails(a),Game.Stats.updateAmounts(),o(a)}).catch(function(e){console.log("Error in getting the data")})}}}(),Game.Stats={init:function(){},updateAmounts:function(){var e=Game.Model.getGame().token;console.log(e),Game.Data.apicall("https://localhost:5001/api/spel/Amount/"+e).then(function(e){var t,a,n=JSON.parse(e);for(t in playerPieceHistory={player1:[],player2:[]},n[0])playerPieceHistory.player1.push(n[0][t].Amount);for(a in n[1])playerPieceHistory.player2.push(n[1][a].Amount);$("#Chart").html(Game.Template.parseTemplate("stats",playerPieceHistory))})}},Game.Template={parseTemplate:function(e,t){return(e=e,spa_templates.templates[e])(t)}};